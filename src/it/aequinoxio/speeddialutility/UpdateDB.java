/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package it.aequinoxio.speeddialutility;

import java.awt.Frame;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import javax.swing.JOptionPane;
import javax.swing.JTextArea;
import javax.swing.SwingWorker;

/**
 *
 * @author utente
 */
public class UpdateDB extends javax.swing.JDialog implements PropertyChangeListener {

    private final String PrefJSFile;
    SpeedDialUtility sdu = null;
    int maxEntry = 0;

    /**
     * Creates new form LogViewer
     *
     * @param parent
     * @param modal
     * @param PrefJSFile
     */
    public UpdateDB(Frame parent, boolean modal, String PrefJSFile) {
        super(parent, modal);
        initComponents();
        this.PrefJSFile = PrefJSFile;
        sdu = new SpeedDialUtility(PrefJSFile, txtLog, this);
        sdu.addPropertyChangeListener(this);
        //startWork();
    }

    public JTextArea getLogTextArea() {
        return txtLog;
    }

    public void startWork() {
//sdu.startImport();
        txtLog.setText("");
        pProgress.setValue(0);
        sdu.execute();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        txtLog = new javax.swing.JTextArea();
        lblInfo = new javax.swing.JLabel();
        pProgress = new javax.swing.JProgressBar();
        btnStop = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        txtLog.setColumns(20);
        txtLog.setRows(5);
        jScrollPane1.setViewportView(txtLog);

        lblInfo.setText("    ");

        btnStop.setText("Stop");
        btnStop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStopActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 865, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblInfo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnStop))
                    .addComponent(pProgress, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblInfo)
                    .addComponent(btnStop))
                .addGap(13, 13, 13)
                .addComponent(pProgress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 444, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnStopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStopActionPerformed
        if (JOptionPane.showConfirmDialog(this, "Cancello il task di inserimento?") == JOptionPane.OK_OPTION) {
            sdu.shouldExit();
            btnStop.setEnabled(false);
            txtLog.append("Aspetto la chiusura dei thread...\n");
//            if (sdu.cancel(true)) {
//                //JOptionPane.showMessageDialog(this, "Cancellato.");
//                btnStop.setEnabled(false);
//                try {
//                    txtLog.append(sdu.get());
//                } catch (InterruptedException | ExecutionException ex) {
//                    Logger.getLogger(UpdateDB.class.getName()).log(Level.SEVERE, null, ex);
//                }
//            } else {
//                JOptionPane.showMessageDialog(this, "Ho avuto qualche problema a cancellare il task.");
//            }         
        }
    }//GEN-LAST:event_btnStopActionPerformed

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(LogViewer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(LogViewer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(LogViewer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(LogViewer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the dialog */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                LogViewer dialog = new LogViewer(new javax.swing.JFrame(), true, null);
//                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
//                    @Override
//                    public void windowClosing(java.awt.event.WindowEvent e) {
//                        System.exit(0);
//                    }
//                });
//                dialog.setVisible(true);
//            }
//        });
//    }
//
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnStop;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblInfo;
    private javax.swing.JProgressBar pProgress;
    private javax.swing.JTextArea txtLog;
    // End of variables declaration//GEN-END:variables

    /**
     * Schifezza di metodo per attivare il bottone. Meglio sarebbe gestirlo con un property change o un messaggio 
     * per ora non ho capito come fare con i PropertyChangeEvent semnra che dalla classe SDU non vengano inviati
     */
    public void setUI(){
        btnStop.setEnabled(true);
        lblInfo.setText("Aggiorno il db con i thumbnails. Ci metter√≤ un po' di tempo.");
    }
    
    @Override
    public void propertyChange(PropertyChangeEvent pce) {
        // Aggiorno la progress bar
        switch (pce.getPropertyName()) {
            case "setStopButton":
                btnStop.setEnabled(true);
                break;
            case "progress":
                int progress = (Integer) pce.getNewValue();
                pProgress.setValue(progress);
                break;

            case "state":
                switch ((SwingWorker.StateValue) pce.getNewValue()) {
                    case PENDING:
                        break;
                    case STARTED:
                        btnStop.setEnabled(false); //was true
                        break;
                    case DONE:
                        btnStop.setEnabled(false);
                        JOptionPane.showMessageDialog(this, "Ho finito");
                        break;
                    default:
                        throw new AssertionError(((SwingWorker.StateValue) pce.getNewValue()).name());
                }
                break;
        }
    }
}
